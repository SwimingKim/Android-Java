<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" >

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="스크롤뷰 밖" />

    <HorizontalScrollView
        android:id="@+id/scrollView1"
        android:layout_width="match_parent"
        android:layout_height="match_parent" >

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical" >

            <Button
                android:id="@+id/button1"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="4.75"
                android:text="스크롤뷰 내부" />

            <TextView
                android:id="@+id/textView1"
                android:layout_width="wrap_content"
                android:layout_height="match_parent"
                android:layout_weight="4.75"
                android:text="지식경제부는 상암동 누리꿈스퀘어에서 소프트웨어(SW) 인재육성 프로젝트 ´SW Maestro과정´ 발대식을 가졌다고 8일 밝혔다.

´SW Maestro과정´은 지난 2월 지경부가 발표한 ´소프트웨어 강국 도약 전략´의 일환으로, 소프트웨어를 중심으로 한 세계 IT산업의 경쟁 패러다임에 신속히 대응하기 위해 학생 100명을 선발해 소프트웨어 분야 인재로 육성하는 프로그램이다.

이날 행사에는 최경환 지경부 장관, 김영환 국회지경위원장, 정경원 정보통신산업진흥원장, 소프트웨어 멘토 30명이 참석했다.

정경원 정보통신산업진흥원 원장은 환영사를 통해 창의적인 인재를 발굴해 소프트웨어산업의 미래를 이끌어 나갈 인물로 양성하는 것이 소프트웨어 마에스트로 과정의 궁극적인 목표라고 말했다.

´SW Maestro과정´은 총 3단계로 구성되며 연수생 100명을 선발한 후 1단계 70명, 2단계 20명, 3단계 10명의 연수생만을 추리게 된다. 그리고 이들은 최종 검증단계를 거쳐 ´소프트웨어 마에스트로´로 임명될 예정이다.

이를 위해 지난 6월 지경부는 소프트웨어 전문가 160여명을 추천 받아 전문가, 교수, 기업CTO그룹에 의해 치러진 3차 검증과 면접을 통해 30명의 멘토단을 최종 선정했다.

선정된 멘토단은 연수생 선발을 시작으로 단계별 교육과 평가를 통해 10명 이내의 최종 ´SW Maestro´ 선발에 주도적으로 참여하게 된다.

최경환 지식경제부 장관은 정부가 주력하고 있는 IT산업에 원동력이 될 소프트웨어 인재 육성에 모든 노력을 다 하겠다고 말했다."
                android:textSize="20sp" />
        </LinearLayout>
    </HorizontalScrollView>

</LinearLayout>